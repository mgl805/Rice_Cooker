<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>ca.ets.mgl805.hiver2016.ricecooker</groupId>
    <artifactId>RiceCooker</artifactId>
    <name>${project.groupId}.${project.artifactId}</name>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <url>https://github.com/mgl805/Rice_Cooker</url>
    <inceptionYear>2016</inceptionYear>
    <description>
        Le président de la société ACME Inc. désire augmenter son portfolio de produits de
		consommation en développant un cuiseur de riz intelligent. Le président confie le développement
		du logiciel du cuiseur à la nouvelle société Road Runner.
		
		Ce cuiseur de riz de nouvelle génération vise à cuire une variété de riz provenant de différents
		pays. Il offrira trois modes de cuisson.
    </description>
    
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <developers>
		<developer>
			<id>all</id>
			<name>Alexis Leperlier</name>
			<email>alexis.leperlier@gmail.com</email>
            <roles>
                <role>Chef de projet, programmeur, testeur</role>
            </roles>
		</developer>
		<developer>
			<id>mhk</id>
			<name>Maha Kharbech</name>
			<email>maha.kharbech@gmail.com</email>
            <roles>
                <role>Cochef de projet, analyste, programmatrice, testeuse</role>
            </roles>
		</developer>
		<developer>
			<id>mrk</id>
			<name>Marwa Kharbech</name>
			<email>marwa.kharbeche@gmail.com</email>
            <roles>
                <role>Conceptrice, cochef de projet, programmatrice, testeuse</role>
            </roles>
		</developer>
		<developer>
			<id>sya</id>
			<name>Sylvose Allogo</name>
			<email>sylvose.allogo@gmail.com</email>
            <roles>
                <role>Cochef de projet, architecte, analyste, programmeur, testeur</role>
            </roles>
		</developer>
	</developers>
    
    <contributors>
        <contributor>
            <name>Claude Yves Laporte</name>
            <email>claude.laporte@etsmtl.ca</email>
        </contributor>
        <contributor>
            <name>Iheb Abdellatif</name>
            <email>iheb.abdellatif@gmail.com</email>
        </contributor>
    </contributors>
    
    <organization>
        <!-- Used as the 'Vendor' for JNLP generation -->
        <name>${project.groupId}.${project.artifactId}</name>
    </organization>

    <properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<java.version>1.8.0</java.version>
		<javafx.version>${java.version}</javafx.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>
    
        <doSign>false</doSign>
        <doRelease>false</doRelease>
    	
		<exec.mainClass>ca.ets.mgl805.hiver2016.ricecooker.view.Main</exec.mainClass>
		
        <slf4j.version>1.7.12</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
    </properties>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
	        <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-checkstyle-plugin</artifactId>
	                <version>2.15</version>
	                <executions>
	                    <execution>
	                        <id>verify</id>
	                        <phase>verify</phase>
	                        <configuration>
	                            <configLocation>${basedir}/src/main/resources/checkstyle.xml</configLocation>
	                            <headerLocation>license.header</headerLocation>
	                            <encoding>${project.build.sourceEncoding}</encoding>
	                            <consoleOutput>true</consoleOutput>
	                            <failsOnError>false</failsOnError>
	                            <failOnViolation>false</failOnViolation>
	                            <linkXRef>false</linkXRef>
	                        </configuration>
	                        <goals>
	                            <goal>check</goal>
	                        </goals>
	                    </execution>
	                </executions>
            </plugin>
            <plugin>
                <groupId>com.zenjava</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>8.1.5</version>
                <configuration>
                    <mainClass>ca.ets.mgl805.hiver2016.ricecooker.view.Main</mainClass>
                    <!-- only required if signing the jar file -->
                    <keyStoreAlias>javafx</keyStoreAlias>
                    <keyStorePassword>password</keyStorePassword>
                    <allPermissions>true</allPermissions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <configuration>
                            <excludeScope>system</excludeScope>
                            <excludeGroupIds>junit,org.mockito,org.hamcrest</excludeGroupIds>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>${basedir}/src/main/resources/assembly/jar-with-dependencies.xml</descriptor>
                    </descriptors>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${exec.mainClass}</mainClass>
                            <classpathLayoutType>repository</classpathLayoutType>
                        </manifest> 
                        <manifestEntries>
                            <JavaFX-Application-Class>${exec.mainClass}</JavaFX-Application-Class>
                            <Main-Class>${exec.mainClass}</Main-Class>
                            <JavaFX-Version>${javafx.version}+</JavaFX-Version>
                            <implementation-version>1.0</implementation-version>
                            <!-- <JavaFX-Class-Path></JavaFX-Class-Path> -->
                            <!-- The artifactId (name) of the jfxrt.jar ... see dependency system scope --> 
                            <Class-Path>javafx-${javafx.version}.jar</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jarsigner-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <id>sign</id>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <keystore>${basedir}/src/main/resources/keystore</keystore>
                    <alias>javafx</alias>
                    <storepass>password</storepass>
                    <keypass>password</keypass>
                    <archive>${project.build.directory}/deploy/${finalName}.jar</archive>
                </configuration>
      		</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <!-- define the deploy ANT task -->
                                <taskdef name="jfxdeploy" 
                                         classname="com.sun.javafx.tools.ant.DeployFXTask"
                                         classpathref="maven.plugin.classpath" />
                                <!-- define the JarSing ANT task -->
                                <taskdef name="jfxsignjar" 
                                         classname="com.sun.javafx.tools.ant.FXSignJarTask"
                                         classpathref="maven.plugin.classpath" />
                                <jfxdeploy width="1024" height="768"
                                           outdir="${project.build.directory}/deploy" 
                                           outfile="${project.build.finalName}"
                                           nativeBundles="all">
                                    <info title="${project.name}" />
                                    <application name="${project.name}" mainClass="${exec.mainClass}" />
                                    <resources>
                                        <fileset dir="${project.build.directory}" includes="*.jar" />
										<!-- <fileset dir="${project.build.directory}/dependency" includes="*.jar" /> -->
                                    </resources>
                                    <!-- set your jvm args-->
                                    <platform javafx="${javafx.version}+">
                                        <jvmarg value="-Xms512m" />
                                        <jvmarg value="-Xmx1024m" />
                                    </platform>
                                </jfxdeploy>
                                <!-- you need to generate a key yourself -->
                                <jfxsignjar destdir="${project.build.directory}/deploy"
                                            keyStore="${basedir}/src/main/resources/keystore/javafx.ks"
                                            storePass="password" alias="javafx"
                                            keyPass="password" >
                                    <fileset dir="${project.build.directory}/deploy" includes="*.jar" />
                                </jfxsignjar>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.oracle</groupId>
                        <artifactId>ant-javafx</artifactId>
                        <version>${javafx.version}</version>
                        <systemPath>${java.home}/../lib/ant-javafx.jar</systemPath>
                        <scope>system</scope>
                    </dependency>
                    <dependency>
                        <groupId>com.oracle</groupId>
                        <artifactId>javafx</artifactId>
                        <version>${javafx.version}</version>
                        <systemPath>${java.home}/lib/jfxrt.jar</systemPath>
                        <scope>system</scope>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>3.4</version>
                <configuration>
                    <goalPrefix>jfx</goalPrefix>
                    <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
                </configuration>
                <executions>
                    <execution>
                        <id>descriptor</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>descriptor</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>helpmojo</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>helpmojo</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.4</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.wagon</groupId>
                        <artifactId>wagon-ftp</artifactId>
                        <version>2.4</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- MigLayout -->
        <dependency>
            <groupId>com.miglayout</groupId>
            <artifactId>miglayout-javafx</artifactId>
            <version>5.0</version>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        
         <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>keytool-maven-plugin</artifactId>
            <version>1.5</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- 
        <dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ant-javafx</artifactId>
			<version>${javafx.version}</version>
			<systemPath>${env.JAVA_HOME}/../lib/ant-javafx.jar</systemPath>
			<scope>system</scope>
		</dependency>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>javafx</artifactId>
            <version>${javafx.version}</version>
            <systemPath>${env.JAVA_HOME}/lib/jfxrt.jar</systemPath>
            <scope>system</scope>
        </dependency>
        -->
         
        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
    </dependencies>
    
    <scm>
        <connection>scm:git:git://github.com/mgl805/Rice_Cooker.git</connection>
        <developerConnection>scm:git:git@github.com:mgl805/Rice_Cooker.git</developerConnection>
        <url>https://github.com/mgl805/Rice_Cooker</url>
    </scm>
    
    <repositories>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    
    <pluginRepositories>
        <pluginRepository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
                <checksumPolicy>fail</checksumPolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>3.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>summary</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    
</project>